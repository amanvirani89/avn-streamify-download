{"ast":null,"code":"var _jsxFileName = \"/Users/amanvirani/Desktop/React/avn-streamify-final/avn-streamify-download/src/components/Plans.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport db from '../firebase';\nimport { useSelector } from 'react-redux';\nimport { selectUser } from '../features/userSlice';\nimport '../css/Plans.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Plans() {\n  _s();\n\n  const [product, setProduct] = useState([]);\n  const user = useSelector(selectUser);\n  const [subscription, setSubscription] = useState(null);\n  useEffect(() => {\n    db.collection('products').where('active', '==', true).get().then(function (querySnapshot) {\n      const products = {};\n      querySnapshot.forEach(async function (pDoc) {\n        products[pDoc.id] = pDoc.data();\n        console.log(pDoc.id, ' => ', pDoc.data());\n        const priceSnap = await pDoc.ref.collection('prices').get();\n        priceSnap.docs.forEach(doc => {\n          products[pDoc.id].prices = {\n            priceId: doc.id,\n            priceData: doc.data()\n          };\n          console.log(doc.id, ' => ', doc.data());\n        });\n      });\n      setProduct(products);\n    });\n  }, []);\n  useEffect(() => {\n    db.collection('customers').doc(user.uid).collection('subscriptions').get().then(querySnapshot => {\n      querySnapshot.forEach(async subscription => {\n        setSubscription({\n          role: subscription.data().role,\n          current_period_end: subscription.data().current_period_end.seconds,\n          current_period_start: subscription.data().current_period_start.seconds\n        });\n      });\n    });\n  });\n\n  const loadingCheckout = async priceId => {\n    const docRef = await db.collection('customers').doc(user.uid).collection('checkout_sessions').add({\n      price: priceId,\n      success_url: window.location.origin,\n      cancel_url: window.location.origin\n    }); // Wait for the CheckoutSession to get attached by the extension\n\n    docRef.onSnapshot(async snap => {\n      const {\n        error,\n        sessionId\n      } = snap.data();\n\n      if (error) {\n        // Show an error to your customer and\n        // inspect your Cloud Function logs in the Firebase console.\n        alert(`An error occured: ${error.message}`);\n      }\n\n      if (sessionId) {\n        // We have a session, let's redirect to Checkout\n        // Init Stripe\n        const stripe = await loadStripe('pk_test_51IK8p6ITyOPcVjHzbdbij1qzyBb6mjqWpsMy7GI5DFLThCqrwDFRlFbZcH9QKkx5rOY7OgG1WRaIwtdVcZchQwCs00dvCJqy4N');\n        stripe.redirectToCheckout({\n          sessionId\n        });\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"plans\",\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), subscription && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Renewal Date :\", new Date((subscription === null || subscription === void 0 ? void 0 : subscription.current_period_end) * 1000).toLocaleDateString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this), Object.entries(product).map(([pId, pData]) => {\n      var _pData$name;\n\n      const isCurrentPackage = (_pData$name = pData.name) === null || _pData$name === void 0 ? void 0 : _pData$name.toLowerCase().includes(subscription === null || subscription === void 0 ? void 0 : subscription.role);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${isCurrentPackage && 'plans-disabled'} plans-available`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"plans-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: pData.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: pData.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => !isCurrentPackage && loadingCheckout(pData.prices.priceId),\n          children: isCurrentPackage ? 'Current Package' : 'Subscribe'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this)]\n      }, pId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Plans, \"N6Wj11O2gAVDz31hAqhVKuWGKDs=\", false, function () {\n  return [useSelector];\n});\n\n_c = Plans;\nexport default Plans;\n\nvar _c;\n\n$RefreshReg$(_c, \"Plans\");","map":{"version":3,"sources":["/Users/amanvirani/Desktop/React/avn-streamify-final/avn-streamify-download/src/components/Plans.js"],"names":["React","useEffect","useState","loadStripe","db","useSelector","selectUser","Plans","product","setProduct","user","subscription","setSubscription","collection","where","get","then","querySnapshot","products","forEach","pDoc","id","data","console","log","priceSnap","ref","docs","doc","prices","priceId","priceData","uid","role","current_period_end","seconds","current_period_start","loadingCheckout","docRef","add","price","success_url","window","location","origin","cancel_url","onSnapshot","snap","error","sessionId","alert","message","stripe","redirectToCheckout","Date","toLocaleDateString","Object","entries","map","pId","pData","isCurrentPackage","name","toLowerCase","includes","description"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport db from '../firebase';\nimport { useSelector } from 'react-redux';\nimport { selectUser } from '../features/userSlice';\nimport '../css/Plans.css';\n\nfunction Plans() {\n  const [product, setProduct] = useState([]);\n  const user = useSelector(selectUser);\n  const [subscription, setSubscription] = useState(null);\n\n  useEffect(() => {\n    db.collection('products')\n      .where('active', '==', true)\n      .get()\n      .then(function (querySnapshot) {\n        const products = {};\n        querySnapshot.forEach(async function (pDoc) {\n          products[pDoc.id] = pDoc.data();\n          console.log(pDoc.id, ' => ', pDoc.data());\n          const priceSnap = await pDoc.ref.collection('prices').get();\n          priceSnap.docs.forEach((doc) => {\n            products[pDoc.id].prices = {\n              priceId: doc.id,\n              priceData: doc.data(),\n            };\n            console.log(doc.id, ' => ', doc.data());\n          });\n        });\n        setProduct(products);\n      });\n  }, []);\n\n  useEffect(() => {\n    db.collection('customers')\n      .doc(user.uid)\n      .collection('subscriptions')\n      .get()\n      .then((querySnapshot) => {\n        querySnapshot.forEach(async (subscription) => {\n          setSubscription({\n            role: subscription.data().role,\n            current_period_end: subscription.data().current_period_end.seconds,\n            current_period_start: subscription.data().current_period_start\n              .seconds,\n          });\n        });\n      });\n  });\n\n  const loadingCheckout = async (priceId) => {\n    const docRef = await db\n      .collection('customers')\n      .doc(user.uid)\n      .collection('checkout_sessions')\n      .add({\n        price: priceId,\n        success_url: window.location.origin,\n        cancel_url: window.location.origin,\n      });\n    // Wait for the CheckoutSession to get attached by the extension\n    docRef.onSnapshot(async (snap) => {\n      const { error, sessionId } = snap.data();\n      if (error) {\n        // Show an error to your customer and\n        // inspect your Cloud Function logs in the Firebase console.\n        alert(`An error occured: ${error.message}`);\n      }\n      if (sessionId) {\n        // We have a session, let's redirect to Checkout\n        // Init Stripe\n        const stripe = await loadStripe(\n          'pk_test_51IK8p6ITyOPcVjHzbdbij1qzyBb6mjqWpsMy7GI5DFLThCqrwDFRlFbZcH9QKkx5rOY7OgG1WRaIwtdVcZchQwCs00dvCJqy4N'\n        );\n\n        stripe.redirectToCheckout({ sessionId });\n      }\n    });\n  };\n\n  return (\n    <div className=\"plans\">\n      <br />\n      {subscription && (\n        <p>\n          Renewal Date :\n          {new Date(\n            subscription?.current_period_end * 1000\n          ).toLocaleDateString()}\n        </p>\n      )}\n      {Object.entries(product).map(([pId, pData]) => {\n        const isCurrentPackage = pData.name\n          ?.toLowerCase()\n          .includes(subscription?.role);\n\n        return (\n          <div\n            key={pId}\n            className={`${\n              isCurrentPackage && 'plans-disabled'\n            } plans-available`}\n          >\n            <div className=\"plans-info\">\n              <h5>{pData.name}</h5>\n              <h6>{pData.description}</h6>\n            </div>\n            <button\n              onClick={() =>\n                !isCurrentPackage && loadingCheckout(pData.prices.priceId)\n              }\n            >\n              {isCurrentPackage ? 'Current Package' : 'Subscribe'}\n            </button>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default Plans;\n"]},"metadata":{},"sourceType":"module"}