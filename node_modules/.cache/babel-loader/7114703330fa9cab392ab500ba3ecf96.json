{"ast":null,"code":"import _regeneratorRuntime from\"/Users/amanvirani/Desktop/React/avn-streamify/avn-streamify/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/amanvirani/Desktop/React/avn-streamify/avn-streamify/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/amanvirani/Desktop/React/avn-streamify/avn-streamify/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import axios from'../axios';import React,{useEffect,useState}from'react';import'../css/Rows.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Rows(_ref){var movieTitle=_ref.movieTitle,fetchUrl=_ref.fetchUrl;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),Movies=_useState2[0],setMovies=_useState2[1];useEffect(function(){function movieData(){return _movieData.apply(this,arguments);}function _movieData(){_movieData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get(fetchUrl);case 2:response=_context.sent;setMovies(response.data.results);return _context.abrupt(\"return\",response);case 5:case\"end\":return _context.stop();}}},_callee);}));return _movieData.apply(this,arguments);}movieData();},[]);console.log(Movies);return/*#__PURE__*/_jsxs(\"div\",{className:\"movie-group\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"movie-title\",children:/*#__PURE__*/_jsx(\"h2\",{children:movieTitle})}),/*#__PURE__*/_jsx(\"div\",{className:\"movie-data\",children:Movies.map(function(movie){return movie.poster_path&&/*#__PURE__*/_jsx(\"img\",{src:\"http://image.tmdb.org/t/p/w500/\".concat(movie.poster_path),alt:movie.title||movie.original_title||movie.name||movie.original_name});})})]});}export default Rows;","map":{"version":3,"sources":["/Users/amanvirani/Desktop/React/avn-streamify/avn-streamify/src/components/Rows.js"],"names":["axios","React","useEffect","useState","Rows","movieTitle","fetchUrl","Movies","setMovies","movieData","get","response","data","results","console","log","map","movie","poster_path","title","original_title","name","original_name"],"mappings":"mhBAAA,MAAOA,CAAAA,KAAP,KAAkB,UAAlB,CACA,MAAOC,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,MAAO,iBAAP,C,wFAEA,QAASC,CAAAA,IAAT,MAAwC,IAAxBC,CAAAA,UAAwB,MAAxBA,UAAwB,CAAZC,QAAY,MAAZA,QAAY,eACVH,QAAQ,CAAC,EAAD,CADE,wCAC/BI,MAD+B,eACvBC,SADuB,eAGtCN,SAAS,CAAC,UAAM,SACCO,CAAAA,SADD,qIACd,sKACyBT,CAAAA,KAAK,CAACU,GAAN,CAAUJ,QAAV,CADzB,QACQK,QADR,eAEEH,SAAS,CAACG,QAAQ,CAACC,IAAT,CAAcC,OAAf,CAAT,CAFF,gCAGSF,QAHT,wDADc,4CAOdF,SAAS,GACV,CARQ,CAQN,EARM,CAAT,CASAK,OAAO,CAACC,GAAR,CAAYR,MAAZ,EAEA,mBACE,aAAK,SAAS,CAAC,aAAf,wBACE,YAAK,SAAS,CAAC,aAAf,uBACE,oBAAKF,UAAL,EADF,EADF,cAIE,YAAK,SAAS,CAAC,YAAf,UACGE,MAAM,CAACS,GAAP,CACC,SAACC,KAAD,QACEA,CAAAA,KAAK,CAACC,WAAN,eACE,YACE,GAAG,0CAAoCD,KAAK,CAACC,WAA1C,CADL,CAEE,GAAG,CACDD,KAAK,CAACE,KAAN,EACAF,KAAK,CAACG,cADN,EAEAH,KAAK,CAACI,IAFN,EAGAJ,KAAK,CAACK,aANV,EAFJ,EADD,CADH,EAJF,GADF,CA4BD,CAED,cAAelB,CAAAA,IAAf","sourcesContent":["import axios from '../axios';\nimport React, { useEffect, useState } from 'react';\nimport '../css/Rows.css';\n\nfunction Rows({ movieTitle, fetchUrl }) {\n  const [Movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    async function movieData() {\n      const response = await axios.get(fetchUrl);\n      setMovies(response.data.results);\n      return response;\n    }\n\n    movieData();\n  }, []);\n  console.log(Movies);\n\n  return (\n    <div className=\"movie-group\">\n      <div className=\"movie-title\">\n        <h2>{movieTitle}</h2>\n      </div>\n      <div className=\"movie-data\">\n        {Movies.map(\n          (movie) =>\n            movie.poster_path && (\n              <img\n                src={`http://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n                alt={\n                  movie.title ||\n                  movie.original_title ||\n                  movie.name ||\n                  movie.original_name\n                }\n              />\n            )\n        )}\n      </div>\n      {/* <div className=\"movie-data\">\n        {Movies.map((movie) => (\n          <h2>{movie.vote_average}</h2>\n        ))}\n      </div> */}\n    </div>\n  );\n}\n\nexport default Rows;\n"]},"metadata":{},"sourceType":"module"}